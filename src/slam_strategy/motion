#!/usr/bin/env python
import math
import rospy
from slam_strategy.msg import Planification
from geometry_msgs.msg import Twist

rospy.init_node('motion')

def motion(message):
    motion_pub = rospy.Publisher('/cmd_vel', Twist)
    twist = Twist()


    for i in range(1, len(message.path)):

        angular_dist = math.atan2(message.path[i].y - message.path[i - 1].y, message.path[i].x - message.path[i - 1].x) - message.orientation
        twist.angular.z = (angular_dist / abs(angular_dist))*0.5 # spinning at 0.5 rad/s in the right direction
        motion_pub.publish(twist)
        rospy.sleep(abs(angular_dist)*2) # sleeping during all the trip
        message.orientation = angular_dist #updating the angular orientation

        print (angular_dist)

        twist.linear.x = 0.1 # moving forward at 0.1 m/s
        motion_pub.publish(twist)
        euclidian_dist = ((message.path[i].x - message.path[i - 1].x)**2 + (message.path[i].y - message.path[i - 1].y)**2)**(1/2)
        rospy.sleep(euclidian_dist * 10) # sleeping during all the trip

        print(euclidian_dist)

rospy.Subscriber('/planif', Planification, motion)
rospy.spin()

# vim: ft=python et sw=4 sts=4
